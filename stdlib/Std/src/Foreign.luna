import Std.Base

def lookupSymbol dll symbol:
    case primLookupSymbol dll symbol of
        Just ptr: ptr
        Nothing:  throw "foo"

native class FunPtr:
    def call retType args:
        primCallFunPtr self retType args

    def shortRep: "FunPtr"
    def toJSON: "FunPtr"

def malloc size:
    m = lookupSymbol "" "malloc"
    m.call Ptr [size . toCArg]

def free ptr:
    f = lookupSymbol "" "free"
    f.call CVoid [ptr . toCArg]

def strlen str:
    s = lookupSymbol "" "strlen"
    s.call CInt [str . toCArg]

native class Ptr a:
    Ptr
    def toCArg: primPtrToCArg self
    def shortRep: primPtrToJSON self
    def toJSON: primPtrToJSON self
    def toText: primPtrToJSON self
    def + bytes: primPlusPtr self bytes

    def read ptr: primReadPtrPtr ptr
    def write ptr: primWritePtrPtr ptr self

def nullPtr: primNullPtr

native class CVoid:
    CVoid

native class CChar:
    CChar

native class CUChar:
    CUChar

native class CInt:
    CInt
    def byteSize: primByteSizeInt
    def read ptr: primReadPtrInt ptr
    def write ptr: primWritePtrInt ptr self

native class CInt32:
    CInt32
    def byteSize: primByteSizeInt32
    def read ptr: primReadPtrInt32 ptr
    def write ptr: primWritePtrInt32 ptr self

native class CInt64:
    CInt64
    def byteSize: primByteSizeInt64
    def read ptr: primReadPtrInt64 ptr
    def write ptr: primWritePtrInt64 ptr self

native class CUInt:
    CUInt
    def byteSize: primByteSizeUInt
    def read ptr: primReadPtrUInt ptr
    def write ptr: primWritePtrUInt ptr self

native class CUInt32:
    CUInt32
    def byteSize: primByteSizeUInt32
    def read ptr: primReadPtrUInt32 ptr
    def write ptr: primWritePtrUInt32 ptr self

native class CUInt64:
    CUInt64

native class CLong:
    CLong

native class CULong:
    CULong

native class CLongLong:
    CLongLong

native class CULongLong:
    CULongLong

native class CFloat:
    CFloat
    def byteSize: primByteSizeFloat
    def read ptr: primReadPtrFloat ptr
    def write ptr: primWritePtrFloat ptr self

native class CDouble:
    CDouble
    def byteSize: primByteSizeDouble
    def read ptr: primReadPtrDouble ptr
    def write ptr: primWritePtrDouble ptr self

native class CString:
    CString

