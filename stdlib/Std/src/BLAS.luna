import Std.Foreign

def blasImpl: "libopenblas.so.0"

class CBLASOrder:
    CblasRowMajor
    CblasColMajor

    def toCArg: case self of
        CblasRowMajor: 101.toCArg
        CblasColMajor: 102.toCArg

class CBLASTranspose:
    CblasNoTrans
    CblasTrans
    CblasConjTrans
    CblasConjNoTrans

    def toCArg: case self of
        CblasNoTrans: 111.toCArg
        CblasTrans: 112.toCArg
        CblasConjTrans: 113.toCArg
        CblasConjNoTrans: 114.toCArg

class CBLASUpLo:
    CblasUpper
    CblasLower

    def toCArg: case self of
        CblasUpper: 121.toCArg
        CblasLower: 122.toCArg

class CBLASDiag:
    CblasNonUnit
    CblasUnit

    def toCArg: case self of
        CblasNonUnit: 131.toCArg
        CblasUnit: 132.toCArg

class CBLASSide:
    CblasLeft
    CblasRight

    def toCArg: case self of
        CblasLeft: 141.toCArg
        CblasRight: 142.toCArg

def drotg a b:
    f = lookupSymbol "libcblas.so.3.8.0" "cblas_drotg"
    ap = malloc 8
    a.write ap
    bp = malloc 8
    b.write bp
    cp = malloc 8
    sp = malloc 8
    f.call CVoid [ap.toCArg, bp.toCArg, cp.toCArg, sp.toCArg]
    r = a.read ap
    z = a.read bp
    c = a.read cp
    s = a.read sp
    free ap
    free bp
    free cp
    free sp
    (r,z,c,s)

def ddot n x incx y incy:
    f = lookupSymbol "libcblas.so.3.8.0" "cblas_ddot"
    f.call CDouble [n.toCArg, x.toCArg, incx.toCArg, y.toCArg, incy.toCArg]

def dnrm2 n x incx:
    f = lookupSymbol "libcblas.so.3.8.0" "cblas_dnrm2"
    f.call CDouble [n.toCArg, x.toCArg, incx.toCArg]

def daxpy n alpha x incx y incy:
    f = lookupSymbol "libcblas.so.3.8.0" "cblas_daxpy"
    f.call CVoid [n.toCArg, alpha.toCArg, x.toCArg, incx.toCArg, y.toCArg, incy.toCArg]

def dcopy n x incx y incy:
    f = lookupSymbol "libcblas.so.3.8.0" "cblas_dcopy"
    f.call CVoid [n.toCArg, x.toCArg, incx.toCArg, y.toCArg, incy.toCArg]

def dgemm layout transA transB m n k alpha a lda b ldb beta c ldc:
    f = lookupSymbol "libcblas.so.3.8.0" "cblas_dgemm"
    f.call CVoid [layout.toCArg, transA.toCArg, transB.toCArg, m.toCArg, n.toCArg, k.toCArg, alpha.toCArg, a.toCArg, lda.toCArg, b.toCArg, ldb.toCArg, beta.toCArg, c.toCArg, ldc.toCArg]
